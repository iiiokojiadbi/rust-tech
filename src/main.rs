// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é —Å–ª–∞–π—Å generic –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –≤—ã–≤–æ–¥—è—â—É—é –Ω–∞ —ç–∫—Ä–∞–Ω –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —ç—Ç–æ–≥–æ —Å–ª–∞–π—Å–∞.
// –ü—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ —Ç–∏–ø–∞–º–∏, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–º–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ç—Ä–µ–π—Ç.
// –î–ª—è –≤—ã–≤–æ–¥–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—Ä–µ–π—Ç Printable –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ –≤—ã—à–µ.
// –î–∞–Ω–Ω—ã–π —Ç—Ä–µ–π—Ç –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –Ω–∞ —Ç–∏–ø–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏.

trait Printable {
    fn print(&self);
}

fn print_all<T: Printable>(items: &[T]) {
    for item in items {
        item.print();
    }
}

impl Printable for i32 {
    fn print(&self) {
        println!("{} ", self);
    }
}

impl Printable for char {
    fn print(&self) {
        println!("{} ", self);
    }
}

impl Printable for &str {
    fn print(&self) {
        println!("{} ", self);
    }
}

fn main() {
    print_all(&[30, 50]);
    print_all(&['üôÇ', '5']);
    print_all(&["–°—Ç—Ä–æ–∫–∞", "–î—Ä—É–≥–∞—è —Å—Ç—Ä–æ–∫–∞"]);
}
